# Pre-commit configuration for Poetry project
# See https://pre-commit.com for more information

repos:
  # Poetry hooks - official Poetry pre-commit hooks
  - repo: https://github.com/python-poetry/poetry
    rev: '1.8.3'  # Use the latest stable version
    hooks:
      - id: poetry-check
        name: Poetry Check
        description: Validate pyproject.toml structure
      - id: poetry-lock
        name: Poetry Lock
        description: Check if poetry.lock is up to date
        args: [--check]
      - id: poetry-export
        name: Poetry Export
        description: Export requirements.txt from poetry.lock
        args: ["-f", "requirements.txt", "-o", "requirements.txt", "--without-hashes"]
        files: ^(pyproject\.toml|poetry\.lock)$

  # Python code formatting and linting
  - repo: https://github.com/psf/black
    rev: '23.12.1'
    hooks:
      - id: black
        name: Black Formatter
        description: Format Python code with Black
        language_version: python3.12

  - repo: https://github.com/pycqa/isort
    rev: '5.13.2'
    hooks:
      - id: isort
        name: isort Import Sorter
        description: Sort Python imports
        args: ["--profile", "black", "--line-length", "79"]

  - repo: https://github.com/pycqa/flake8
    rev: '6.1.0'
    hooks:
      - id: flake8
        name: Flake8 Linter
        description: Lint Python code with flake8
        additional_dependencies:
          - flake8-docstrings
          - flake8-import-order

  # Markdown formatting
  - repo: https://github.com/executablebooks/mdformat
    rev: '0.7.22'
    hooks:
      - id: mdformat
        name: Markdown Formatter
        description: Format markdown files with mdformat

  # General pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        name: Trim Trailing Whitespace
      - id: end-of-file-fixer
        name: Fix End of Files
      - id: check-yaml
        name: Check YAML
        args: ['--multi', '--unsafe']
      - id: check-added-large-files
        name: Check for Large Files
        args: ['--maxkb=1000']
      - id: check-case-conflict
        name: Check Case Conflict
      - id: check-merge-conflict
        name: Check Merge Conflict
      - id: debug-statements
        name: Debug Statements (Python)
      - id: check-docstring-first
        name: Check Docstring First
      - id: check-json
        name: Check JSON
      - id: check-toml
        name: Check TOML
      - id: mixed-line-ending
        name: Mixed Line Ending

  # Security checks
  - repo: https://github.com/PyCQA/bandit
    rev: '1.7.5'
    hooks:
      - id: bandit
        name: Bandit Security Linter
        description: Security linter for Python
        args: ['-r']
        exclude: ^tests/
        types: [python]

# Global configuration
default_language_version:
  python: python3.12

# Performance optimization
default_install_hook_types: [pre-commit, pre-push]

# Fail fast - stop on first failure
fail_fast: false

# Minimum pre-commit version
minimum_pre_commit_version: '3.0.0'
